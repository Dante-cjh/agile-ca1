{"version":3,"file":"static/js/895.e5d2c69d.chunk.js","mappings":"0XAcMA,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,sCAAuB,IAE5CC,EACJ,CACEC,OAAQ,EACRC,SAAU,IACVC,gBAAiB,sBAGN,SAASC,EAAiBC,GAEvC,IAAAC,GAA4CC,EAAAA,EAAAA,UAAS,SAAUC,EAAAA,IAAvDC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAASL,EAATK,UAAWC,EAAON,EAAPM,QAEhC,GAAID,EACF,OAAOE,EAAAA,EAAAA,KAACf,EAAO,IAGjB,GAAIc,EACF,OAAOC,EAAAA,EAAAA,KAAA,MAAAC,SAAKJ,EAAMK,UAEpB,IAAMC,EAASP,EAAKO,OACG,QAAnBA,EAAO,GAAGC,MACZD,EAAOE,QAAQ,CAAEC,GAAI,IAAKF,KAAM,QAGlC,IAAMG,EAAe,SAACC,EAAGC,EAAMC,GAC7BF,EAAEG,iBACFnB,EAAMoB,YAAYH,EAAMC,EAC1B,EAUA,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,GAAI,CACFC,SAAU,IACV1B,gBAAiB,oBAEnB2B,QAAQ,WAAUhB,SAAA,EAClBY,EAAAA,EAAAA,MAACK,EAAAA,EAAW,CAAAjB,SAAA,EACVY,EAAAA,EAAAA,MAACM,EAAAA,EAAU,CAACF,QAAQ,KAAKG,UAAU,KAAInB,SAAA,EACrCD,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACC,SAAS,UAAU,yBAGjCtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CACRR,IAAES,EAAAA,EAAAA,GAAA,GAAMrC,GACRmB,GAAG,gBACHmB,MAAM,eACNhB,KAAK,SACLQ,QAAQ,SACRP,MAAOlB,EAAMkC,YACbC,SA3BiB,SAACnB,EAAGhB,GAC3Be,EAAaC,EAAG,OAAQA,EAAEoB,OAAOlB,MACnC,KA2BMG,EAAAA,EAAAA,MAACgB,EAAAA,EAAW,CAACd,IAAES,EAAAA,EAAAA,GAAA,GAAMrC,GAAac,SAAA,EAChCD,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACxB,GAAG,cAAaL,SAAC,WAC7BD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLC,QAAQ,cACR1B,GAAG,eACH2B,aAAa,GACbvB,MAAOlB,EAAM0C,YACbP,SAhCgB,SAACnB,GACzBD,EAAaC,EAAG,QAASA,EAAEoB,OAAOlB,MACpC,EA8BsCT,SAE3BE,EAAOgC,KAAI,SAACC,GACX,OACEpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAQ,CAAgB3B,MAAO0B,EAAM9B,GAAGL,SACtCmC,EAAMhC,MADMgC,EAAM9B,GAIzB,aAINN,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CACRvB,GAAI,CAAEwB,OAAQ,KACdC,MAAOC,EACPC,MAAM,aAId,C,2BChGIC,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+OACD,UACJN,EAAQ,EAAUG,C","sources":["components/movie/filterMoviesCard/index.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import React, {lazy, Suspense} from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport img from '../../../images/pexels-dziana-hasanbekava-5480827.jpg';\r\nimport { getGenres } from \"../../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nconst Spinner = lazy(() => import(\"../../spinner\"));\r\n\r\nconst formControl = \r\n  {\r\n    margin: 1,\r\n    minWidth: 220,\r\n    backgroundColor: \"rgb(255, 255, 255)\"\r\n  };\r\n\r\nexport default function FilterMoviesCard(props) {\r\n\r\n  const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  const genres = data.genres;\r\n  if (genres[0].name !== \"All\"){\r\n    genres.unshift({ id: \"0\", name: \"All\" });\r\n  }\r\n\r\n  const handleChange = (e, type, value) => {\r\n    e.preventDefault();\r\n    props.onUserInput(type, value); // NEW\r\n  };\r\n\r\n  const handleTextChange = (e, props) => {\r\n    handleChange(e, \"name\", e.target.value);\r\n  };\r\n\r\n  const handleGenreChange = (e) => {\r\n    handleChange(e, \"genre\", e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      sx={{\r\n        maxWidth: 345,\r\n        backgroundColor: \"rgb(204, 204, 0)\"\r\n      }} \r\n      variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n        </Typography>\r\n        <TextField\r\n          sx={{...formControl}}\r\n          id=\"filled-search\"\r\n          label=\"Search field\"\r\n          type=\"search\"\r\n          variant=\"filled\"\r\n          value={props.titleFilter}\r\n          onChange={handleTextChange}\r\n        />\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\r\n          <Select\r\n            labelId=\"genre-label\"\r\n            id=\"genre-select\"\r\n            defaultValue=\"\"\r\n            value={props.genreFilter}\r\n            onChange={handleGenreChange}\r\n          >\r\n            {genres.map((genre) => {\r\n              return (\r\n                <MenuItem key={genre.id} value={genre.id}>\r\n                  {genre.name}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </CardContent>\r\n      <CardMedia\r\n        sx={{ height: 300 }}\r\n        image={img}\r\n        title=\"Filter\"\r\n      />\r\n    </Card>\r\n  );\r\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["Spinner","lazy","formControl","margin","minWidth","backgroundColor","FilterMoviesCard","props","_useQuery","useQuery","getGenres","data","error","isLoading","isError","_jsx","children","message","genres","name","unshift","id","handleChange","e","type","value","preventDefault","onUserInput","_jsxs","Card","sx","maxWidth","variant","CardContent","Typography","component","SearchIcon","fontSize","TextField","_objectSpread","label","titleFilter","onChange","target","FormControl","InputLabel","Select","labelId","defaultValue","genreFilter","map","genre","MenuItem","CardMedia","height","image","img","title","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}